{"ast":null,"code":"var _jsxFileName = \"/Users/achraf/Downloads/projet-web-barakat_elmaghnaouy_sait_badreddine-UI/src/payment-frontend/CheckoutForm.jsx\",\n  _s = $RefreshSig$();\nimport { useStripe, useElements, PaymentElement } from '@stripe/react-stripe-js';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const {\n      error,\n      paymentIntent\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Keep this empty since we are handling navigation manually\n      },\n      redirect: \"if_required\" // Prevent automatic redirection\n    });\n    if (error) {\n      console.error(\"Payment failed:\", error.message);\n      // Navigate to /confirmation with failure status\n      navigate(\"/confirmation\", {\n        state: {\n          status: \"failed\",\n          error: error.message\n        }\n      });\n    } else {\n      console.log(\"Payment succeeded!\", paymentIntent);\n      // Navigate to /confirmation with success status\n      navigate(\"/confirmation\", {\n        state: {\n          status: \"succeeded\",\n          paymentIntent\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(PaymentElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe,\n      children: \"Pay Now\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CheckoutForm, \"dItBdZQNKexsv+t0LqYtwDgt2wQ=\", false, function () {\n  return [useStripe, useElements, useNavigate];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["useStripe","useElements","PaymentElement","useNavigate","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","navigate","handleSubmit","event","preventDefault","error","paymentIntent","confirmPayment","confirmParams","redirect","console","message","state","status","log","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["/Users/achraf/Downloads/projet-web-barakat_elmaghnaouy_sait_badreddine-UI/src/payment-frontend/CheckoutForm.jsx"],"sourcesContent":["import { useStripe, useElements, PaymentElement } from '@stripe/react-stripe-js';\nimport { useNavigate } from \"react-router-dom\";\n\nconst CheckoutForm = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const navigate = useNavigate();\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!stripe || !elements) {\n            return;\n        }\n\n\n        const { error, paymentIntent } = await stripe.confirmPayment({\n            elements,\n            confirmParams: {\n                // Keep this empty since we are handling navigation manually\n            },\n            redirect: \"if_required\", // Prevent automatic redirection\n        });\n\n        if (error) {\n            console.error(\"Payment failed:\", error.message);\n            // Navigate to /confirmation with failure status\n            navigate(\"/confirmation\", { state: { status: \"failed\", error: error.message } });\n        } else {\n            console.log(\"Payment succeeded!\", paymentIntent);\n            // Navigate to /confirmation with success status\n            navigate(\"/confirmation\", { state: { status: \"succeeded\", paymentIntent } });\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <PaymentElement />\n            <button type=\"submit\" disabled={!stripe}>\n                Pay Now\n            </button>\n        </form>\n    );\n};\n\nexport default CheckoutForm;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,WAAW,EAAEC,cAAc,QAAQ,yBAAyB;AAChF,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACL,MAAM,IAAI,CAACC,QAAQ,EAAE;MACtB;IACJ;IAGA,MAAM;MAAEK,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMP,MAAM,CAACQ,cAAc,CAAC;MACzDP,QAAQ;MACRQ,aAAa,EAAE;QACX;MAAA,CACH;MACDC,QAAQ,EAAE,aAAa,CAAE;IAC7B,CAAC,CAAC;IAEF,IAAIJ,KAAK,EAAE;MACPK,OAAO,CAACL,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACM,OAAO,CAAC;MAC/C;MACAV,QAAQ,CAAC,eAAe,EAAE;QAAEW,KAAK,EAAE;UAAEC,MAAM,EAAE,QAAQ;UAAER,KAAK,EAAEA,KAAK,CAACM;QAAQ;MAAE,CAAC,CAAC;IACpF,CAAC,MAAM;MACHD,OAAO,CAACI,GAAG,CAAC,oBAAoB,EAAER,aAAa,CAAC;MAChD;MACAL,QAAQ,CAAC,eAAe,EAAE;QAAEW,KAAK,EAAE;UAAEC,MAAM,EAAE,WAAW;UAAEP;QAAc;MAAE,CAAC,CAAC;IAChF;EACJ,CAAC;EAED,oBACIV,OAAA;IAAMmB,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBACzBpB,OAAA,CAACH,cAAc;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClBxB,OAAA;MAAQyB,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAE,CAACvB,MAAO;MAAAiB,QAAA,EAAC;IAEzC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAACtB,EAAA,CAxCID,YAAY;EAAA,QACCN,SAAS,EACPC,WAAW,EACXE,WAAW;AAAA;AAAA6B,EAAA,GAH1B1B,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}