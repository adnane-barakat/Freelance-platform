{"ast":null,"code":"var _jsxFileName = \"/Users/achraf/Downloads/projet-web-barakat_elmaghnaouy_sait_badreddine-UI/src/components/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n\n  // This would typically fetch data from an API\n  const tasks = [{\n    id: 1,\n    title: 'Task 1',\n    deadline: '2023-06-15'\n  }, {\n    id: 2,\n    title: 'Task 2',\n    deadline: '2023-06-20'\n  }, {\n    id: 3,\n    title: 'Task 3',\n    deadline: '2023-06-25'\n  }];\n  const renderCalendar = () => {\n    const today = new Date();\n    const daysInMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate();\n    const days = [];\n    for (let i = 1; i <= daysInMonth; i++) {\n      const date = new Date(today.getFullYear(), today.getMonth(), i);\n      const hasTask = tasks.some(task => new Date(task.deadline).toDateString() === date.toDateString());\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\n            p-2 text-center cursor-pointer transition-colors duration-200\n            ${hasTask ? 'bg-blue-100' : ''}\n            ${selectedDate === i ? 'bg-blue-500 text-white' : 'hover:bg-gray-100'}\n          `,\n        onClick: () => setSelectedDate(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this));\n    }\n    return days;\n  };\n  const renderTasksForSelectedDate = () => {\n    if (!selectedDate) return null;\n    const selectedDateObj = new Date(new Date().getFullYear(), new Date().getMonth(), selectedDate);\n    const tasksForDate = tasks.filter(task => new Date(task.deadline).toDateString() === selectedDateObj.toDateString());\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold mb-2\",\n        children: [\"Tasks for \", selectedDateObj.toDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"space-y-2\",\n        children: tasksForDate.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"bg-white p-2 rounded shadow\",\n          children: task.title\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"bg-white p-6 rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1\",\n      children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center font-semibold\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)), renderCalendar()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), renderTasksForSelectedDate()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Calendar, \"rhrbPH1/NtfhiyDl62tZ0yGffOM=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Calendar","_s","selectedDate","setSelectedDate","tasks","id","title","deadline","renderCalendar","today","Date","daysInMonth","getFullYear","getMonth","getDate","days","i","date","hasTask","some","task","toDateString","push","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","renderTasksForSelectedDate","selectedDateObj","tasksForDate","filter","map","day","_c","$RefreshReg$"],"sources":["/Users/achraf/Downloads/projet-web-barakat_elmaghnaouy_sait_badreddine-UI/src/components/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Calendar() {\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  \r\n  // This would typically fetch data from an API\r\n  const tasks = [\r\n    { id: 1, title: 'Task 1', deadline: '2023-06-15' },\r\n    { id: 2, title: 'Task 2', deadline: '2023-06-20' },\r\n    { id: 3, title: 'Task 3', deadline: '2023-06-25' },\r\n  ];\r\n\r\n  const renderCalendar = () => {\r\n    const today = new Date();\r\n    const daysInMonth = new Date(today.getFullYear(), today.getMonth() + 1, 0).getDate();\r\n    const days = [];\r\n\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      const date = new Date(today.getFullYear(), today.getMonth(), i);\r\n      const hasTask = tasks.some(task => new Date(task.deadline).toDateString() === date.toDateString());\r\n      \r\n      days.push(\r\n        <div \r\n          key={i} \r\n          className={`\r\n            p-2 text-center cursor-pointer transition-colors duration-200\r\n            ${hasTask ? 'bg-blue-100' : ''}\r\n            ${selectedDate === i ? 'bg-blue-500 text-white' : 'hover:bg-gray-100'}\r\n          `}\r\n          onClick={() => setSelectedDate(i)}\r\n        >\r\n          {i}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return days;\r\n  };\r\n\r\n  const renderTasksForSelectedDate = () => {\r\n    if (!selectedDate) return null;\r\n\r\n    const selectedDateObj = new Date(new Date().getFullYear(), new Date().getMonth(), selectedDate);\r\n    const tasksForDate = tasks.filter(task => new Date(task.deadline).toDateString() === selectedDateObj.toDateString());\r\n\r\n    return (\r\n      <div className=\"mt-4\">\r\n        <h3 className=\"text-lg font-semibold mb-2\">Tasks for {selectedDateObj.toDateString()}</h3>\r\n        <ul className=\"space-y-2\">\r\n          {tasksForDate.map(task => (\r\n            <li key={task.id} className=\"bg-white p-2 rounded shadow\">{task.title}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section className=\"bg-white p-6 rounded-lg shadow-md\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">Calendar</h2>\r\n      <div className=\"grid grid-cols-7 gap-1\">\r\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\r\n          <div key={day} className=\"text-center font-semibold\">{day}</div>\r\n        ))}\r\n        {renderCalendar()}\r\n      </div>\r\n      {renderTasksForSelectedDate()}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}