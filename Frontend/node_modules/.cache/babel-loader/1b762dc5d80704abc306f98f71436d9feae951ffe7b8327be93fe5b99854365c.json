{"ast":null,"code":"var _jsxFileName = \"/Users/achraf/Downloads/projet-web-barakat_elmaghnaouy_sait_badreddine-UI/src/components/ApplyToTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApplyToTask() {\n  _s();\n  const [tasks, setTasks] = useState([]); // Liste des tâches OPEN\n  const [message, setMessage] = useState(''); // Message pour l'application\n  const [error, setError] = useState(''); // Message d'erreur\n  const [selectedTaskId, setSelectedTaskId] = useState(''); // Tâche sélectionnée\n  const [loading, setLoading] = useState(true); // Gestion du chargement\n\n  // Charger toutes les tâches avec le statut OPEN\n  useEffect(() => {\n    fetch('http://localhost:8080/api/tasks?status=OPEN') // Modifiez le backend pour filtrer par statut si nécessaire\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch open tasks');\n      }\n      return response.json();\n    }).then(data => {\n      setTasks(data);\n      setLoading(false);\n    }).catch(err => {\n      setError('Error fetching tasks: ' + err.message);\n      setLoading(false);\n    });\n  }, []);\n\n  // Fonction pour postuler à une tâche\n  const handleApply = taskId => {\n    const userId = 'user123'; // Remplacez par l'ID de l'utilisateur connecté\n\n    fetch(`http://localhost:8080/api/tasks/${taskId}/apply?userId=${userId}&message=${message}`, {\n      method: 'POST'\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to apply to task');\n      }\n      return response.json();\n    }).then(() => {\n      setError('');\n      alert('Application sent successfully!');\n    }).catch(err => setError('Failed to apply to task: ' + err.message));\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading tasks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold\",\n      children: \"Open Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-4\",\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold\",\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700\",\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: [\"Budget: $\", task.budget, \" | Category: \", task.category, \" | Deadline: \", new Date(task.deadline).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full p-2 mt-2 border rounded\",\n          placeholder: \"Write your application message...\",\n          value: selectedTaskId === task._id ? message : '',\n          onChange: e => {\n            setSelectedTaskId(task._id);\n            setMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n          onClick: () => handleApply(task._id),\n          children: \"Apply to Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No open tasks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(ApplyToTask, \"9hLSeFICZXZK96Q/xdY63fFBAcw=\");\n_c = ApplyToTask;\nexport default ApplyToTask;\nvar _c;\n$RefreshReg$(_c, \"ApplyToTask\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ApplyToTask","_s","tasks","setTasks","message","setMessage","error","setError","selectedTaskId","setSelectedTaskId","loading","setLoading","fetch","then","response","ok","Error","json","data","catch","err","handleApply","taskId","userId","method","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","task","title","description","budget","category","Date","deadline","toLocaleDateString","placeholder","value","_id","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/achraf/Downloads/projet-web-barakat_elmaghnaouy_sait_badreddine-UI/src/components/ApplyToTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction ApplyToTask() {\n    const [tasks, setTasks] = useState([]); // Liste des tâches OPEN\n    const [message, setMessage] = useState(''); // Message pour l'application\n    const [error, setError] = useState(''); // Message d'erreur\n    const [selectedTaskId, setSelectedTaskId] = useState(''); // Tâche sélectionnée\n    const [loading, setLoading] = useState(true); // Gestion du chargement\n\n    // Charger toutes les tâches avec le statut OPEN\n    useEffect(() => {\n        fetch('http://localhost:8080/api/tasks?status=OPEN') // Modifiez le backend pour filtrer par statut si nécessaire\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Failed to fetch open tasks');\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setTasks(data);\n                setLoading(false);\n            })\n            .catch((err) => {\n                setError('Error fetching tasks: ' + err.message);\n                setLoading(false);\n            });\n    }, []);\n\n    // Fonction pour postuler à une tâche\n    const handleApply = (taskId) => {\n        const userId = 'user123'; // Remplacez par l'ID de l'utilisateur connecté\n\n        fetch(`http://localhost:8080/api/tasks/${taskId}/apply?userId=${userId}&message=${message}`, {\n            method: 'POST',\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Failed to apply to task');\n                }\n                return response.json();\n            })\n            .then(() => {\n                setError('');\n                alert('Application sent successfully!');\n            })\n            .catch((err) => setError('Failed to apply to task: ' + err.message));\n    };\n\n    if (loading) return <p>Loading tasks...</p>;\n    if (error) return <p className=\"text-red-500\">{error}</p>;\n\n    return (\n        <div className=\"space-y-6\">\n            <h1 className=\"text-3xl font-bold\">Open Tasks</h1>\n            <div className=\"space-y-4\">\n                {tasks.length > 0 ? (\n                    tasks.map((task) => (\n                        <div key={task._id} className=\"p-4 border rounded shadow\">\n                            <h2 className=\"text-2xl font-bold\">{task.title}</h2>\n                            <p className=\"text-gray-700\">{task.description}</p>\n                            <p className=\"text-sm text-gray-500\">\n                                Budget: ${task.budget} | Category: {task.category} | Deadline: {new Date(task.deadline).toLocaleDateString()}\n                            </p>\n                            <textarea\n                                className=\"w-full p-2 mt-2 border rounded\"\n                                placeholder=\"Write your application message...\"\n                                value={selectedTaskId === task._id ? message : ''}\n                                onChange={(e) => {\n                                    setSelectedTaskId(task._id);\n                                    setMessage(e.target.value);\n                                }}\n                            />\n                            <button\n                                className=\"mt-2 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\n                                onClick={() => handleApply(task._id)}\n                            >\n                                Apply to Task\n                            </button>\n                        </div>\n                    ))\n                ) : (\n                    <p>No open tasks available</p>\n                )}\n            </div>\n            {error && <p className=\"text-red-500\">{error}</p>}\n        </div>\n    );\n}\n\nexport default ApplyToTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}